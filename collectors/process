# Copyright (C) 2020 IBM Corporation
#
# Licensed under the Apache License, Version 2.0 (the “License”);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# process collector

logging I ">> Collecting running processes information\n"

run_command "ps" "$COLLECTOR_OUTPUT_DIR/ps.txt"
run_command "ps auxwww" "$COLLECTOR_OUTPUT_DIR/ps-auxwww.txt"
run_command "ps -deaf" "$COLLECTOR_OUTPUT_DIR/ps-deaf.txt"
run_command "ps -ef" "$COLLECTOR_OUTPUT_DIR/ps-ef.txt"
run_command "ps -efl" "$COLLECTOR_OUTPUT_DIR/ps-efl.txt"
run_command "ps -eo pid,etime,args" "$COLLECTOR_OUTPUT_DIR/ps-eo-pid-etime-args.txt"
run_command "ps -eo pid,lstart,args" "$COLLECTOR_OUTPUT_DIR/ps-eo-pid-lstart-args.txt"
run_command "lsof -n -P -l" "$COLLECTOR_OUTPUT_DIR/lsof-n-P-l.txt"

case "$PROFILE" in
    "aix")
        run_command "pstat -a" "$COLLECTOR_OUTPUT_DIR/pstat-a.txt"
        run_command "pstat -A" "$COLLECTOR_OUTPUT_DIR/pstat-A.txt"
        run_command "pstat -f" "$COLLECTOR_OUTPUT_DIR/pstat-f.txt"
        run_command "pstat -p" "$COLLECTOR_OUTPUT_DIR/pstat-p.txt"
        # collect information from /proc/PID
        run_command "ls -la /proc/[0-9]*" "$COLLECTOR_OUTPUT_DIR/ls-la-proc-pid.txt"
        for LOCAL_PROC_DIRECTORY in /proc/[0-9]*; do
            LOCAL_PROC_PID=`echo "$LOCAL_PROC_DIRECTORY" | cut -d"/" -f 3`
            if [ -n "$LOCAL_PROC_PID" ]; then
                run_command "mkdir -p \"$COLLECTOR_OUTPUT_DIR/proc/$LOCAL_PROC_PID\"" "/dev/null"
                run_command "strings /proc/$LOCAL_PROC_PID/psinfo" "$COLLECTOR_OUTPUT_DIR/proc/$LOCAL_PROC_PID/psinfo.txt"
                run_command "procfiles -n -c ${LOCAL_PROC_PID}" "$COLLECTOR_OUTPUT_DIR/proc/$LOCAL_PROC_PID/procfiles.txt"
            fi
        done
        # hash running processes
        if [ -n "$MD5SUM_TOOL" ]; then
            logging I ">> Hashing running processes\n"
            run_command "find /proc/[0-9]*/object/a.out -print | while read line; do \$MD5SUM_TOOL \$line; done" "$COLLECTOR_OUTPUT_DIR/running_processes_hashes.md5.txt"
            if $CALCULATE_SHA1; then
                if [ -n "$SHA1SUM_TOOL" ]; then
                    run_command "find /proc/[0-9]*/object/a.out -print | while read line; do \$SHA1SUM_TOOL \$line; done" "$COLLECTOR_OUTPUT_DIR/running_processes_hashes.sha1.txt"
                else
                    logging D "Cannot hash running processes. No SHA1 hashing tool was found on the system.\n"
                fi
            fi
        else
            logging D "Cannot hash running processes. No MD5 hashing tool was found on the system.\n"
        fi
        
        # extract strings from running processes
        if $EXTRACT_STRINGS_RUNNING_PROCESSES; then
            logging I ">> Extracting strings from running processes\n"
            run_command "mkdir -p \"$COLLECTOR_OUTPUT_DIR/strings\"" "/dev/null"
            run_command "find /proc/[0-9]*/object/a.out -print | while read line; do cut -d\"/\" -f 3; done | while read pid; do strings -a /proc/\$pid/object/a.out | $COMPRESS_TOOL > \"$COLLECTOR_OUTPUT_DIR/strings/\$pid.txt.$COMPRESS_EXT\"; done" "/dev/null"
        fi
        ;;
    "bsd")
        run_command "fstat" "$COLLECTOR_OUTPUT_DIR/fstat.txt"
        run_command "top -b" "$COLLECTOR_OUTPUT_DIR/top-b.txt"
        # some BSDs use /proc/PID/exe
        # e.g. NetBSD
        if [ -h "/proc/$$/exe" ]; then
            run_command "ls -la /proc/[0-9]*" "$COLLECTOR_OUTPUT_DIR/ls-la-proc-pid.txt"
            run_command "find /proc/[0-9]*/exe -print | while read line; do ls -l \$line; done" "$COLLECTOR_OUTPUT_DIR/running_processes_full_paths.txt"
            for LOCAL_PROC_DIRECTORY in /proc/[0-9]*; do
                LOCAL_PROC_PID=`echo "$LOCAL_PROC_DIRECTORY" | cut -d"/" -f 3`
                if [ -n "$LOCAL_PROC_PID" ]; then
                    run_command "mkdir -p \"$COLLECTOR_OUTPUT_DIR/proc/$LOCAL_PROC_PID\"" "/dev/null"
                    run_command "strings /proc/$LOCAL_PROC_PID/cmdline" "$COLLECTOR_OUTPUT_DIR/proc/$LOCAL_PROC_PID/cmdline.txt"
                    run_command "cat /proc/$LOCAL_PROC_PID/map" "$COLLECTOR_OUTPUT_DIR/proc/$LOCAL_PROC_PID/map.txt"
                    run_command "cat /proc/$LOCAL_PROC_PID/maps" "$COLLECTOR_OUTPUT_DIR/proc/$LOCAL_PROC_PID/maps.txt"
                fi
            done
            # hash running processes
            if [ -n "$MD5SUM_TOOL" ]; then
                logging I ">> Hashing running processes\n"
                run_command "find /proc/[0-9]*/exe -print | while read line; do \$MD5SUM_TOOL \$line; done" "$COLLECTOR_OUTPUT_DIR/running_processes_hashes.md5.txt"
                if $CALCULATE_SHA1; then
                    if [ -n "$SHA1SUM_TOOL" ]; then
                        run_command "find /proc/[0-9]*/exe -print | while read line; do \$SHA1SUM_TOOL \$line; done" "$COLLECTOR_OUTPUT_DIR/running_processes_hashes.sha1.txt"
                    else
                        logging D "Cannot hash running processes. No SHA1 hashing tool was found on the system.\n"
                    fi
                fi
            else
                logging D "Cannot hash running processes. No MD5 hashing tool was found on the system.\n"
            fi
            # extract strings from running processes
            if $EXTRACT_STRINGS_RUNNING_PROCESSES; then
                logging I ">> Extracting strings from running processes\n"
                run_command "mkdir -p \"$COLLECTOR_OUTPUT_DIR/strings\"" "/dev/null"
                run_command "find /proc/[0-9]*/exe -print | while read line; do cut -d\"/\" -f 3; done | while read pid; do strings -a /proc/\$pid/exe | $COMPRESS_TOOL > \"$COLLECTOR_OUTPUT_DIR/strings/\$pid.txt.$COMPRESS_EXT\"; done" "/dev/null"
            fi
        elif [ -h "/proc/$$/file" ]; then
            # some BSDs use /proc/PID/file
            # e.g. NetScaler
            run_command "ls -la /proc/[0-9]*" "$COLLECTOR_OUTPUT_DIR/ls-la-proc-pid.txt"
            run_command "find /proc/[0-9]*/file -print | while read line; do ls -l \$line; done" "$COLLECTOR_OUTPUT_DIR/running_processes_full_paths.txt"
            for LOCAL_PROC_DIRECTORY in /proc/[0-9]*; do
                LOCAL_PROC_PID=`echo "$LOCAL_PROC_DIRECTORY" | cut -d"/" -f 3`
                if [ -n "$LOCAL_PROC_PID" ]; then
                    run_command "mkdir -p \"$COLLECTOR_OUTPUT_DIR/proc/$LOCAL_PROC_PID\"" "/dev/null"
                    run_command "strings /proc/$LOCAL_PROC_PID/cmdline" "$COLLECTOR_OUTPUT_DIR/proc/$LOCAL_PROC_PID/cmdline.txt"
                    run_command "cat /proc/$LOCAL_PROC_PID/map" "$COLLECTOR_OUTPUT_DIR/proc/$LOCAL_PROC_PID/map.txt"
                    run_command "cat /proc/$LOCAL_PROC_PID/maps" "$COLLECTOR_OUTPUT_DIR/proc/$LOCAL_PROC_PID/maps.txt"
                fi
            done
            # hash running processes
            if [ -n "$MD5SUM_TOOL" ]; then
                logging I ">> Hashing running processes\n"
                run_command "find /proc/[0-9]*/file -print | while read line; do \$MD5SUM_TOOL \$line; done" "$COLLECTOR_OUTPUT_DIR/running_processes_hashes.md5.txt"
                if $CALCULATE_SHA1; then
                    if [ -n "$SHA1SUM_TOOL" ]; then
                        run_command "find /proc/[0-9]*/file -print | while read line; do \$SHA1SUM_TOOL \$line; done" "$COLLECTOR_OUTPUT_DIR/running_processes_hashes.sha1.txt"
                    else
                        logging D "Cannot hash running processes. No SHA1 hashing tool was found on the system.\n"
                    fi
                fi
            else
                logging D "Cannot hash running processes. No MD5 hashing tool was found on the system.\n"
            fi
            # extract strings from running processes
            if $EXTRACT_STRINGS_RUNNING_PROCESSES; then
                logging I ">> Extracting strings from running processes\n"
                run_command "mkdir -p \"$COLLECTOR_OUTPUT_DIR/strings\"" "/dev/null"
                run_command "find /proc/[0-9]*/file -print | while read line; do cut -d\"/\" -f 3; done | while read pid; do strings -a /proc/\$pid/exe | $COMPRESS_TOOL > \"$COLLECTOR_OUTPUT_DIR/strings/\$pid.txt.$COMPRESS_EXT\"; done" "/dev/null"
            fi
        elif [ -n "$PROCSTAT_TOOL" ]; then
            # some BSDs have procstat tool
            # e.g. FreeBSD
            run_command "ps -eo pid | sed 1d | while read line; do procstat -b \$line | sed 1d | awk '{print \$4}'; done" "$COLLECTOR_OUTPUT_DIR/running_processes_full_paths.txt"
            for LOCAL_PROC_PID in `ps -eo pid | sed 1d`; do
                if [ -n "$LOCAL_PROC_PID" ]; then
                    run_command "mkdir -p \"$COLLECTOR_OUTPUT_DIR/proc/$LOCAL_PROC_PID\"" "/dev/null"
                    run_command "procstat binary $LOCAL_PROC_PID" "$COLLECTOR_OUTPUT_DIR/proc/$LOCAL_PROC_PID/procstat-binary.txt"
                    run_command "procstat arguments $LOCAL_PROC_PID" "$COLLECTOR_OUTPUT_DIR/proc/$LOCAL_PROC_PID/procstat-arguments.txt"
                    run_command "procstat environment $LOCAL_PROC_PID" "$COLLECTOR_OUTPUT_DIR/proc/$LOCAL_PROC_PID/procstat-environment.txt"
                    run_command "procstat files $LOCAL_PROC_PID" "$COLLECTOR_OUTPUT_DIR/proc/$LOCAL_PROC_PID/procstat-files.txt"
                    run_command "procstat vm $LOCAL_PROC_PID" "$COLLECTOR_OUTPUT_DIR/proc/$LOCAL_PROC_PID/procstat-vm.txt"
                fi
            done
            # hash running processes
            if [ -n "$MD5SUM_TOOL" ]; then
                logging I ">> Hashing running processes\n"
                run_command "cat \"$COLLECTOR_OUTPUT_DIR/running_processes_full_paths.txt\" | sort | uniq | while read line; do \$MD5SUM_TOOL \$line; done" "$COLLECTOR_OUTPUT_DIR/running_processes_hashes.md5.txt"
                if $CALCULATE_SHA1; then
                    if [ -n "$SHA1SUM_TOOL" ]; then
                        run_command "cat \"$COLLECTOR_OUTPUT_DIR/running_processes_full_paths.txt\" | sort | uniq | while read line; do \$SHA1SUM_TOOL \$line; done" "$COLLECTOR_OUTPUT_DIR/running_processes_hashes.sha1.txt"
                    else
                        logging D "Cannot hash running processes. No SHA1 hashing tool was found on the system.\n"
                    fi
                fi
            else
                logging D "Cannot hash running processes. No MD5 hashing tool was found on the system.\n"
            fi
            # extract strings from running processes
            if $EXTRACT_STRINGS_RUNNING_PROCESSES; then
                logging I ">> Extracting strings from running processes\n"
                run_command "mkdir -p \"$COLLECTOR_OUTPUT_DIR/strings\"" "/dev/null"
                run_command "cat \"$COLLECTOR_OUTPUT_DIR/running_processes_full_paths.txt\" | sort | uniq | while read line; do LOCAL_PROC_NAME=\`echo \$line | sed 's:^/::; s:/:_:g'\` && strings -a \$line | $COMPRESS_TOOL > \"$COLLECTOR_OUTPUT_DIR/strings/\$LOCAL_PROC_NAME.txt.$COMPRESS_EXT\"; done" "/dev/null"
            fi
        else
            # some BSDs do not have neither /proc nor procstat tool
            # e.g. OpenBSD
            run_command "ps -eo args | grep \"^/\" | awk '{print \$1}'" "$COLLECTOR_OUTPUT_DIR/running_processes_full_paths.txt"
            # hash running processes
            if [ -n "$MD5SUM_TOOL" ]; then
                logging I ">> Hashing running processes\n"
                run_command "cat \"$COLLECTOR_OUTPUT_DIR/running_processes_full_paths.txt\" | sort | uniq | while read line; do \$MD5SUM_TOOL \$line; done" "$COLLECTOR_OUTPUT_DIR/running_processes_hashes.md5.txt"
                if $CALCULATE_SHA1; then
                    if [ -n "$SHA1SUM_TOOL" ]; then
                        run_command "cat \"$COLLECTOR_OUTPUT_DIR/running_processes_full_paths.txt\" | sort | uniq | while read line; do \$SHA1SUM_TOOL \$line; done" "$COLLECTOR_OUTPUT_DIR/running_processes_hashes.sha1.txt"
                    else
                        logging D "Cannot hash running processes. No SHA1 hashing tool was found on the system.\n"
                    fi
                fi
            else
                logging D "Cannot hash running processes. No MD5 hashing tool was found on the system.\n"
            fi
            # extract strings from running processes
            if $EXTRACT_STRINGS_RUNNING_PROCESSES; then
                logging I ">> Extracting strings from running processes\n"
                run_command "mkdir -p \"$COLLECTOR_OUTPUT_DIR/strings\"" "/dev/null"
                run_command "cat \"$COLLECTOR_OUTPUT_DIR/running_processes_full_paths.txt\" | sort | uniq | while read line; do LOCAL_PROC_NAME=\`echo \$line | sed 's:^/::; s:/:_:g'\` && strings -a \$line | $COMPRESS_TOOL > \"$COLLECTOR_OUTPUT_DIR/strings/\$LOCAL_PROC_NAME.txt.$COMPRESS_EXT\"; done" "/dev/null"
            fi
        fi
        ;;
    "linux")
        run_command "pstree" "$COLLECTOR_OUTPUT_DIR/pstree.txt"
        run_command "top -b -n1" "$COLLECTOR_OUTPUT_DIR/top-b-n1.txt"
        # collect information from /proc/PID
        run_command "ls -la /proc/[0-9]*" "$COLLECTOR_OUTPUT_DIR/ls-la-proc-pid.txt"
        run_command "find /proc/[0-9]*/exe -print | while read line; do ls -l \$line; done" "$COLLECTOR_OUTPUT_DIR/running_processes_full_paths.txt"
        for LOCAL_PROC_DIRECTORY in /proc/[0-9]*; do
            LOCAL_PROC_PID=`echo "$LOCAL_PROC_DIRECTORY" | cut -d"/" -f 3`
            if [ -n "$LOCAL_PROC_PID" ]; then
                run_command "mkdir -p \"$COLLECTOR_OUTPUT_DIR/proc/$LOCAL_PROC_PID\"" "/dev/null"
                run_command "cat /proc/$LOCAL_PROC_PID/comm" "$COLLECTOR_OUTPUT_DIR/proc/$LOCAL_PROC_PID/comm.txt"
                run_command "strings /proc/$LOCAL_PROC_PID/cmdline" "$COLLECTOR_OUTPUT_DIR/proc/$LOCAL_PROC_PID/cmdline.txt"
                run_command "cat /proc/$LOCAL_PROC_PID/maps" "$COLLECTOR_OUTPUT_DIR/proc/$LOCAL_PROC_PID/maps.txt"
                run_command "strings /proc/$LOCAL_PROC_PID/environ" "$COLLECTOR_OUTPUT_DIR/proc/$LOCAL_PROC_PID/environ.txt"
                run_command "cat /proc/$LOCAL_PROC_PID/task/$LOCAL_PROC_PID/children" "$COLLECTOR_OUTPUT_DIR/proc/$LOCAL_PROC_PID/children.txt"
                run_command "ls -la /proc/$LOCAL_PROC_PID/fd" "$COLLECTOR_OUTPUT_DIR/proc/$LOCAL_PROC_PID/fd.txt"
            fi
        done
        # hash running processes
        if [ -n "$MD5SUM_TOOL" ]; then
            logging I ">> Hashing running processes\n"
            run_command "find /proc/[0-9]*/exe -print | while read line; do \$MD5SUM_TOOL \$line; done" "$COLLECTOR_OUTPUT_DIR/running_processes_hashes.md5.txt"
            if $CALCULATE_SHA1; then
                if [ -n "$SHA1SUM_TOOL" ]; then
                    run_command "find /proc/[0-9]*/exe -print | while read line; do \$SHA1SUM_TOOL \$line; done" "$COLLECTOR_OUTPUT_DIR/running_processes_hashes.sha1.txt"
                else
                    logging D "Cannot hash running processes. No SHA1 hashing tool was found on the system.\n"
                fi
            fi
        else
            logging D "Cannot hash running processes. No MD5 hashing tool was found on the system.\n"
        fi
        # extract strings from running processes
        if $EXTRACT_STRINGS_RUNNING_PROCESSES; then
            logging I ">> Extracting strings from running processes\n"
            run_command "mkdir -p \"$COLLECTOR_OUTPUT_DIR/strings\"" "/dev/null"
            run_command "find /proc/[0-9]*/exe -print | while read line; do cut -d\"/\" -f 3; done | while read pid; do strings -a /proc/\$pid/exe | $COMPRESS_TOOL > \"$COLLECTOR_OUTPUT_DIR/strings/\$pid.txt.$COMPRESS_EXT\"; done" "/dev/null"
        fi
        ;;
    "macos")
        run_command "top -l1" "$COLLECTOR_OUTPUT_DIR/top-l1.txt"
        run_command "ps -eo args | grep \"^/\" | awk '{print \$1}'" "$COLLECTOR_OUTPUT_DIR/running_processes_full_paths.txt"
        # hash running processes
        if [ -n "$MD5SUM_TOOL" ]; then
            logging I ">> Hashing running processes\n"
            run_command "cat \"$COLLECTOR_OUTPUT_DIR/running_processes_full_paths.txt\" | sort | uniq | while read line; do \$MD5SUM_TOOL \$line; done" "$COLLECTOR_OUTPUT_DIR/running_processes_hashes.md5.txt"
            if $CALCULATE_SHA1; then
                if [ -n "$SHA1SUM_TOOL" ]; then
                    run_command "cat \"$COLLECTOR_OUTPUT_DIR/running_processes_full_paths.txt\" | sort | uniq | while read line; do \$SHA1SUM_TOOL \$line; done" "$COLLECTOR_OUTPUT_DIR/running_processes_hashes.sha1.txt"
                else
                    logging D "Cannot hash running processes. No SHA1 hashing tool was found on the system.\n"
                fi
            fi
        else
            logging D "Cannot hash running processes. No MD5 hashing tool was found on the system.\n"
        fi
        # extract strings from running processes
        if $EXTRACT_STRINGS_RUNNING_PROCESSES; then
            logging I ">> Extracting strings from running processes\n"
            run_command "mkdir -p \"$COLLECTOR_OUTPUT_DIR/strings\"" "/dev/null"
            run_command "cat \"$COLLECTOR_OUTPUT_DIR/running_processes_full_paths.txt\" | sort | uniq | while read line; do LOCAL_PROC_NAME=\`echo \$line | sed 's:^/::; s:/:_:g'\` && strings -a \$line | $COMPRESS_TOOL > \"$COLLECTOR_OUTPUT_DIR/strings/\$LOCAL_PROC_NAME.txt.$COMPRESS_EXT\"; done" "/dev/null"
        fi
        ;;
    "solaris")
        run_command "ptree -a" "$COLLECTOR_OUTPUT_DIR/ptree-a.txt"
        run_command "top -b" "$COLLECTOR_OUTPUT_DIR/top-b.txt"
        # collect information from /proc/PID
        run_command "ls -la /proc/[0-9]*/path" "$COLLECTOR_OUTPUT_DIR/ls-la-proc-pid-path.txt"
        run_command "find /proc/[0-9]*/path/a.out -print | while read line; do ls -l \$line; done" "$COLLECTOR_OUTPUT_DIR/running_processes_full_paths.txt"
        for LOCAL_PROC_DIRECTORY in /proc/[0-9]*; do
            LOCAL_PROC_PID=`echo "$LOCAL_PROC_DIRECTORY" | cut -d"/" -f 3`
            if [ -n "$LOCAL_PROC_PID" ]; then
                run_command "mkdir -p \"$COLLECTOR_OUTPUT_DIR/proc/$LOCAL_PROC_PID\"" "/dev/null"
                run_command "strings /proc/$LOCAL_PROC_PID/cmdline" "$COLLECTOR_OUTPUT_DIR/proc/$LOCAL_PROC_PID/cmdline.txt"
                run_command "strings /proc/$LOCAL_PROC_PID/environ" "$COLLECTOR_OUTPUT_DIR/proc/$LOCAL_PROC_PID/environ.txt"
                run_command "strings /proc/$LOCAL_PROC_PID/psinfo" "$COLLECTOR_OUTPUT_DIR/proc/$LOCAL_PROC_PID/psinfo.txt"
                run_command "pfiles -F $LOCAL_PROC_PID" "$COLLECTOR_OUTPUT_DIR/proc/$LOCAL_PROC_PID/pfiles.txt"
            fi
        done
        # hash running processes
        if [ -n "$MD5SUM_TOOL" ]; then
            logging I ">> Hashing running processes\n"
            run_command "find /proc/[0-9]*/path/a.out -print | while read line; do \$MD5SUM_TOOL \$line; done" "$COLLECTOR_OUTPUT_DIR/running_processes_hashes.md5.txt"
            if $CALCULATE_SHA1; then
                if [ -n "$SHA1SUM_TOOL" ]; then
                    run_command "find /proc/[0-9]*/path/a.out -print | while read line; do \$SHA1SUM_TOOL \$line; done" "$COLLECTOR_OUTPUT_DIR/running_processes_hashes.sha1.txt"
                else
                    logging D "Cannot hash running processes. No SHA1 hashing tool was found on the system.\n"
                fi
            fi
        else
            logging D "Cannot hash running processes. No MD5 hashing tool was found on the system.\n"
        fi
        # extract strings from running processes
        if $EXTRACT_STRINGS_RUNNING_PROCESSES; then
            logging I ">> Extracting strings from running processes\n"
            run_command "mkdir -p \"$COLLECTOR_OUTPUT_DIR/strings\"" "/dev/null"
            run_command "find /proc/[0-9]*/path/a.out -print | while read line; do cut -d\"/\" -f 3; done | while read pid; do strings -a /proc/\$pid/path/a.out | $COMPRESS_TOOL > \"$COLLECTOR_OUTPUT_DIR/strings/\$pid.txt.$COMPRESS_EXT\"; done" "/dev/null"
        fi
        ;;
esac
